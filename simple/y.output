Grammar

    0 $accept: prog $end

    1 prog: exp

    2 exp: INT
    3    | INT PLUS INT
    4    | INT MINUS INT


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 2 3 4
PLUS (259) 3
MINUS (260) 4


Nonterminals, with rules where they appear

$accept (6)
    on left: 0
prog (7)
    on left: 1, on right: 0
exp (8)
    on left: 2 3 4, on right: 1


state 0

    0 $accept: . prog $end

    INT  shift, and go to state 1

    prog  go to state 2
    exp   go to state 3


state 1

    2 exp: INT .
    3    | INT . PLUS INT
    4    | INT . MINUS INT

    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5

    $default  reduce using rule 2 (exp)


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 6


state 3

    1 prog: exp .

    $default  reduce using rule 1 (prog)


state 4

    3 exp: INT PLUS . INT

    INT  shift, and go to state 7


state 5

    4 exp: INT MINUS . INT

    INT  shift, and go to state 8


state 6

    0 $accept: prog $end .

    $default  accept


state 7

    3 exp: INT PLUS INT .

    $default  reduce using rule 3 (exp)


state 8

    4 exp: INT MINUS INT .

    $default  reduce using rule 4 (exp)
